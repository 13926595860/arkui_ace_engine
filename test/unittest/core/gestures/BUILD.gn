# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/arkui/ace_engine/ace_config.gni")
import("//foundation/arkui/ace_engine/test/unittest/ace_unittest.gni")

common_sources = [
  # inner
  "$ace_root/frameworks/base/geometry/dimension.cpp",
  "$ace_root/frameworks/base/geometry/least_square_impl.cpp",
  "$ace_root/frameworks/base/geometry/matrix3.cpp",
  "$ace_root/frameworks/base/geometry/matrix4.cpp",
  "$ace_root/frameworks/base/json/json_util.cpp",
  "$ace_root/frameworks/base/log/dump_log.cpp",
  "$ace_root/frameworks/base/memory/memory_monitor.cpp",
  "$ace_root/frameworks/base/utils/base_id.cpp",
  "$ace_root/frameworks/base/utils/string_expression.cpp",
  "$ace_root/frameworks/base/utils/string_utils.cpp",
  "$ace_root/frameworks/base/utils/time_util.cpp",
  "$ace_root/frameworks/core/animation/anticipate_curve.cpp",
  "$ace_root/frameworks/core/animation/chain_animation.cpp",
  "$ace_root/frameworks/core/animation/cubic_curve.cpp",
  "$ace_root/frameworks/core/animation/curves.cpp",
  "$ace_root/frameworks/core/animation/spring_model.cpp",
  "$ace_root/frameworks/core/animation/spring_motion.cpp",
  "$ace_root/frameworks/core/components/common/layout/grid_column_info.cpp",
  "$ace_root/frameworks/core/components/common/layout/grid_container_info.cpp",
  "$ace_root/frameworks/core/components/common/layout/grid_system_manager.cpp",
  "$ace_root/frameworks/core/components/common/layout/screen_system_manager.cpp",
  "$ace_root/frameworks/core/components/common/properties/alignment.cpp",
  "$ace_root/frameworks/core/components/common/properties/color.cpp",
  "$ace_root/frameworks/core/components_v2/inspector/inspector_constants.cpp",
  "$ace_root/frameworks/core/event/key_event.cpp",
  "$ace_root/frameworks/core/gestures/velocity_tracker.cpp",
  "$ace_root/frameworks/core/pipeline/base/constants.cpp",

  # components_ng_base
  "$ace_root/frameworks/core/components_ng/base/frame_node.cpp",
  "$ace_root/frameworks/core/components_ng/base/geometry_node.cpp",
  "$ace_root/frameworks/core/components_ng/base/view_stack_processor.cpp",

  # components_ng_render
  "$ace_root/frameworks/core/components_ng/render/divider_painter.cpp",
  "$ace_root/frameworks/core/components_ng/render/paint_wrapper.cpp",

  # components_ng_event
  "$ace_root/frameworks/core/components_ng/event/event_hub.cpp",
  "$ace_root/frameworks/core/components_ng/event/focus_hub.cpp",
  "$ace_root/frameworks/core/components_ng/event/gesture_event_hub.cpp",
  "$ace_root/frameworks/core/components_ng/event/input_event.cpp",
  "$ace_root/frameworks/core/components_ng/event/input_event_hub.cpp",
  "$ace_root/frameworks/core/components_ng/event/state_style_manager.cpp",

  # mock
  "$ace_root/frameworks/base/test/mock/mock_ressched_report.cpp",
  "$ace_root/frameworks/base/test/mock/mock_system_properties.cpp",
  "$ace_root/frameworks/core/common/test/mock/mock_ace_application_info.cpp",
  "$ace_root/frameworks/core/components_ng/test/mock/render/mock_media_player_creator.cpp",
  "$ace_root/frameworks/core/pipeline_ng/test/mock/mock_pipeline_base.cpp",
  "$ace_root/test/unittest/core/pipeline/mock_event_manager.cpp",

  # self
  # gestures
  "$ace_root/frameworks/core/components_ng/gestures/gesture_group.cpp",
  "$ace_root/frameworks/core/components_ng/gestures/gesture_referee.cpp",
  "$ace_root/frameworks/core/components_ng/gestures/long_press_gesture.cpp",
  "$ace_root/frameworks/core/components_ng/gestures/pan_gesture.cpp",
  "$ace_root/frameworks/core/components_ng/gestures/pinch_gesture.cpp",
  "$ace_root/frameworks/core/components_ng/gestures/rotation_gesture.cpp",
  "$ace_root/frameworks/core/components_ng/gestures/swipe_gesture.cpp",
  "$ace_root/frameworks/core/components_ng/gestures/tap_gesture.cpp",

  # recognizers
  "$ace_root/frameworks/core/components_ng/gestures/recognizers/click_recognizer.cpp",
  "$ace_root/frameworks/core/components_ng/gestures/recognizers/exclusive_recognizer.cpp",
  "$ace_root/frameworks/core/components_ng/gestures/recognizers/gesture_recognizer.cpp",
  "$ace_root/frameworks/core/components_ng/gestures/recognizers/long_press_recognizer.cpp",
  "$ace_root/frameworks/core/components_ng/gestures/recognizers/multi_fingers_recognizer.cpp",
  "$ace_root/frameworks/core/components_ng/gestures/recognizers/pan_recognizer.cpp",
  "$ace_root/frameworks/core/components_ng/gestures/recognizers/parallel_recognizer.cpp",
  "$ace_root/frameworks/core/components_ng/gestures/recognizers/pinch_recognizer.cpp",
  "$ace_root/frameworks/core/components_ng/gestures/recognizers/recognizer_group.cpp",
  "$ace_root/frameworks/core/components_ng/gestures/recognizers/rotation_recognizer.cpp",
  "$ace_root/frameworks/core/components_ng/gestures/recognizers/sequenced_recognizer.cpp",
  "$ace_root/frameworks/core/components_ng/gestures/recognizers/swipe_recognizer.cpp",

  # NG
  "$ace_root/frameworks/core/components_ng/pattern/gesture/gesture_model_ng.cpp",
]

ohos_unittest("gestures_test_ng") {
  module_out_path = gestures_test_output_path

  test_sources = [ "gestures_test_ng.cpp" ]

  sources = common_sources + test_sources

  deps = [
    "$ace_root/test/unittest:ace_unittest_log",
    "$ace_root/test/unittest:ace_unittest_trace",
    "$cjson_root:cjson_static",
    "//third_party/googletest:gmock_main",
  ]

  configs = [ "$ace_root/test/unittest:ace_unittest_config" ]
}
