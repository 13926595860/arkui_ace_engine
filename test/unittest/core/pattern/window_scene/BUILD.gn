# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//foundation/arkui/ace_engine/test/unittest/ace_unittest.gni")

ohos_unittest("window_scene_test") {
  module_out_path = pattern_test_output_path

  sources = [
    # inner
    "$ace_root/frameworks/base/geometry/dimension.cpp",
    "$ace_root/frameworks/base/geometry/least_square_impl.cpp",
    "$ace_root/frameworks/base/geometry/matrix3.cpp",
    "$ace_root/frameworks/base/geometry/matrix4.cpp",
    "$ace_root/frameworks/base/json/json_util.cpp",
    "$ace_root/frameworks/base/ressched/ressched_report.cpp",
    "$ace_root/frameworks/base/test/mock/mock_drag_window.cpp",
    "$ace_root/frameworks/base/test/mock/mock_pixel_map.cpp",
    "$ace_root/frameworks/base/test/mock/mock_system_properties.cpp",
    "$ace_root/frameworks/base/utils/base_id.cpp",
    "$ace_root/frameworks/base/utils/string_expression.cpp",
    "$ace_root/frameworks/base/utils/string_utils.cpp",
    "$ace_root/frameworks/base/utils/time_util.cpp",
    "$ace_root/frameworks/core/animation/anticipate_curve.cpp",
    "$ace_root/frameworks/core/animation/cubic_curve.cpp",
    "$ace_root/frameworks/core/animation/curves.cpp",
    "$ace_root/frameworks/core/common/clipboard/clipboard_proxy.cpp",
    "$ace_root/frameworks/core/common/container_scope.cpp",
    "$ace_root/frameworks/core/common/test/mock/mock_ace_application_info.cpp",
    "$ace_root/frameworks/core/components/common/layout/grid_column_info.cpp",
    "$ace_root/frameworks/core/components/common/layout/grid_container_info.cpp",
    "$ace_root/frameworks/core/components/common/layout/grid_system_manager.cpp",
    "$ace_root/frameworks/core/components/common/layout/screen_system_manager.cpp",
    "$ace_root/frameworks/core/components/common/properties/alignment.cpp",
    "$ace_root/frameworks/core/components/common/properties/color.cpp",
    "$ace_root/frameworks/core/components_ng/base/frame_node.cpp",
    "$ace_root/frameworks/core/components_ng/base/geometry_node.cpp",
    "$ace_root/frameworks/core/components_ng/base/modifier.cpp",
    "$ace_root/frameworks/core/components_ng/base/ui_node.cpp",
    "$ace_root/frameworks/core/components_ng/base/view_abstract.cpp",
    "$ace_root/frameworks/core/components_ng/base/view_stack_processor.cpp",
    "$ace_root/frameworks/core/components_ng/event/click_event.cpp",
    "$ace_root/frameworks/core/components_ng/event/drag_event.cpp",
    "$ace_root/frameworks/core/components_ng/event/event_hub.cpp",
    "$ace_root/frameworks/core/components_ng/event/focus_hub.cpp",
    "$ace_root/frameworks/core/components_ng/event/gesture_event_hub.cpp",
    "$ace_root/frameworks/core/components_ng/event/input_event.cpp",
    "$ace_root/frameworks/core/components_ng/event/input_event_hub.cpp",
    "$ace_root/frameworks/core/components_ng/event/long_press_event.cpp",
    "$ace_root/frameworks/core/components_ng/event/pan_event.cpp",
    "$ace_root/frameworks/core/components_ng/event/state_style_manager.cpp",
    "$ace_root/frameworks/core/components_ng/event/touch_event.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/gesture_referee.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/recognizers/click_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/recognizers/exclusive_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/recognizers/gesture_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/recognizers/long_press_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/recognizers/multi_fingers_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/recognizers/pan_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/recognizers/parallel_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/recognizers/recognizer_group.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/recognizers/sequenced_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/layout/box_layout_algorithm.cpp",
    "$ace_root/frameworks/core/components_ng/layout/layout_property.cpp",
    "$ace_root/frameworks/core/components_ng/layout/layout_wrapper.cpp",
    "$ace_root/frameworks/core/components_ng/layout/layout_wrapper_builder.cpp",

    # components_ng_manager
    "$ace_root/frameworks/core/components_ng/manager/safe_area/safe_area_manager.cpp",

    # components_ng_pattern
    "$ace_root/frameworks/core/components_ng/pattern/flex/flex_layout_algorithm.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/grid_container/grid_container_layout_property.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/image/image_layout_algorithm.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/image/image_modifier.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/image/image_paint_method.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/linear_layout/linear_layout_utils.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/stack/stack_layout_algorithm.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/window_scene/root/root_scene_model.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/window_scene/scene/system_window_scene.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/window_scene/scene/window_event_process.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/window_scene/scene/window_node.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/window_scene/scene/window_pattern.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/window_scene/scene/window_scene.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/window_scene/scene/window_scene_model.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/window_scene/screen/screen_model.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/window_scene/screen/screen_pattern.cpp",
    "$ace_root/frameworks/core/components_ng/property/border_property.cpp",
    "$ace_root/frameworks/core/components_ng/property/calc_length.cpp",
    "$ace_root/frameworks/core/components_ng/property/grid_property.cpp",
    "$ace_root/frameworks/core/components_ng/property/measure_utils.cpp",
    "$ace_root/frameworks/core/components_ng/property/property.cpp",
    "$ace_root/frameworks/core/components_ng/property/safe_area_insets.cpp",

    # components_ng_syntax
    "$ace_root/frameworks/core/components_ng/syntax/for_each_node.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/animation/mock_geometry_transition.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/image_provider/mock_image_loading_context.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/image_provider/mock_image_painter.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/image_provider/mock_image_source_info.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/render/mock_animation_utils.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/render/mock_modifier_adapter.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/render/mock_path_painter.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/render/mock_render_property.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/render/mock_render_surface_creator.cpp",
    "$ace_root/frameworks/core/components_ng/test/pattern/image/mock/mock_image_pattern.cpp",
    "$ace_root/frameworks/core/components_ng/test/pattern/image/mock_icon_theme.cpp",
    "$ace_root/frameworks/core/components_v2/inspector/inspector_constants.cpp",
    "$ace_root/frameworks/core/pipeline_ng/test/mock/mock_element_register.cpp",
    "$ace_root/frameworks/core/pipeline_ng/test/mock/mock_pipeline_base.cpp",
    "$ace_root/test/mock/adapter/mock_mmi_event_convertor.cpp",
    "$ace_root/test/mock/core/common/mock_container.cpp",
    "$ace_root/test/mock/core/render/mock_rosen_render_context.cpp",
    "$ace_root/test/unittest/core/pattern/window_scene/window_scene_test.cpp",
  ]

  configs = [ "$ace_root/test/unittest:ace_unittest_config" ]

  include_dirs = [
    "$window_manager_path/interfaces/innerkits",
    "$window_manager_path/interfaces/innerkits/wm",
    "$window_manager_path/wm/include",
  ]

  deps = [
    "$ace_root/frameworks/base:ace_memory_monitor_ohos",
    "$ace_root/test/unittest:ace_engine_unittest_flutter_deps",
    "$ace_root/test/unittest:ace_unittest_log",
    "$ace_root/test/unittest:ace_unittest_trace",
    "$cjson_root:cjson",
    "//third_party/googletest:gmock_main",
  ]

  external_deps = [
    "graphic_2d:librender_service_client",
    "input:libmmi-client",
    "ipc:ipc_single",
    "window_manager:libwm",
    "window_manager:scene_session",
    "window_manager:scene_session_manager",
    "window_manager:screen_session",
    "window_manager:screen_session_manager",
  ]
}
