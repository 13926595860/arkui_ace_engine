# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//foundation/arkui/ace_engine/test/unittest/ace_unittest.gni")

ohos_unittest("event_manager_test_ng") {
  module_out_path = event_test_output_path

  sources = [
    "$ace_root/adapter/ohos/osal/ace_trace.cpp",
    "$ace_root/adapter/ohos/osal/frame_trace_adapter_fake_impl.cpp",
    "$ace_root/adapter/ohos/osal/log_wrapper.cpp",
    "$ace_root/frameworks/base/geometry/dimension.cpp",
    "$ace_root/frameworks/base/json/json_util.cpp",
    "$ace_root/frameworks/base/log/ace_trace.cpp",
    "$ace_root/frameworks/base/test/mock/mock_animatable_dimension.cpp",
    "$ace_root/frameworks/base/test/mock/mock_mouse_style.cpp",
    "$ace_root/frameworks/base/test/mock/mock_ressched_report.cpp",
    "$ace_root/frameworks/base/test/mock/mock_system_properties.cpp",
    "$ace_root/frameworks/base/utils/string_expression.cpp",
    "$ace_root/frameworks/base/utils/time_util.cpp",
    "$ace_root/frameworks/core/animation/test/mock/mock_animator.cpp",
    "$ace_root/frameworks/core/common/ace_engine.cpp",
    "$ace_root/frameworks/core/common/container_scope.cpp",
    "$ace_root/frameworks/core/common/event_manager.cpp",
    "$ace_root/frameworks/core/common/test/mock/mock_ace_application_info.cpp",
    "$ace_root/frameworks/core/common/test/mock/mock_watch_dog.cpp",
    "$ace_root/frameworks/core/components/ability_component/ability_component.cpp",
    "$ace_root/frameworks/core/components/ability_component/render_ability_component.cpp",
    "$ace_root/frameworks/core/components/ability_component/resource/ability_component_delegate.cpp",
    "$ace_root/frameworks/core/components/ability_component/resource/ability_component_resource.cpp",
    "$ace_root/frameworks/core/components/box/render_box.cpp",
    "$ace_root/frameworks/core/components/box/render_box_creator.cpp",
    "$ace_root/frameworks/core/components/common/properties/alignment.cpp",
    "$ace_root/frameworks/core/components/common/properties/color.cpp",
    "$ace_root/frameworks/core/components/scroll/render_scroll.cpp",
    "$ace_root/frameworks/core/components/scroll/render_single_child_scroll.cpp",
    "$ace_root/frameworks/core/components_ng/animation/geometry_transition.cpp",
    "$ace_root/frameworks/core/components_ng/base/frame_node.cpp",
    "$ace_root/frameworks/core/components_ng/base/geometry_node.cpp",
    "$ace_root/frameworks/core/components_ng/base/ui_node.cpp",
    "$ace_root/frameworks/core/components_ng/event/click_event.cpp",
    "$ace_root/frameworks/core/components_ng/event/event_hub.cpp",
    "$ace_root/frameworks/core/components_ng/event/focus_hub.cpp",
    "$ace_root/frameworks/core/components_ng/event/gesture_event_hub.cpp",
    "$ace_root/frameworks/core/components_ng/event/input_event.cpp",
    "$ace_root/frameworks/core/components_ng/event/input_event_hub.cpp",
    "$ace_root/frameworks/core/components_ng/event/scrollable_event.cpp",
    "$ace_root/frameworks/core/components_ng/event/state_style_manager.cpp",
    "$ace_root/frameworks/core/components_ng/event/touch_event.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/gesture_referee.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/recognizers/click_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/recognizers/exclusive_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/recognizers/gesture_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/recognizers/multi_fingers_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/recognizers/parallel_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/recognizers/recognizer_group.cpp",
    "$ace_root/frameworks/core/components_ng/layout/layout_wrapper.cpp",
    "$ace_root/frameworks/core/components_ng/layout/layout_wrapper_builder.cpp",
    "$ace_root/frameworks/core/components_ng/layout/layout_wrapper_node.cpp",
    "$ace_root/frameworks/core/components_ng/manager/safe_area/safe_area_manager.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/custom/custom_node.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/flex/flex_layout_algorithm.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/stage/stage_manager.cpp",
    "$ace_root/frameworks/core/components_ng/property/border_property.cpp",
    "$ace_root/frameworks/core/components_ng/property/calc_length.cpp",
    "$ace_root/frameworks/core/components_ng/property/measure_utils.cpp",
    "$ace_root/frameworks/core/components_ng/property/property.cpp",
    "$ace_root/frameworks/core/components_ng/property/safe_area_insets.cpp",
    "$ace_root/frameworks/core/components_ng/syntax/lazy_for_each_node.cpp",
    "$ace_root/frameworks/core/components_ng/test/event/scrollable_event/mock_scrollable.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/base/mock_view_stack_processor.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/layout/mock_box_layout_algorithm.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/layout/mock_layout_property.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/manager/select_overlay/mock_select_overlay_manager.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/pattern/stage/mock_page_pattern.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/render/mock_animation_utils.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/render/mock_render_context.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/render/mock_render_context_creator.cpp",
    "$ace_root/frameworks/core/components_v2/inspector/inspector_constants.cpp",
    "$ace_root/frameworks/core/event/back_end_event_manager.cpp",
    "$ace_root/frameworks/core/event/key_event.cpp",
    "$ace_root/frameworks/core/event/mouse_event.cpp",
    "$ace_root/frameworks/core/gestures/gesture_referee.cpp",
    "$ace_root/frameworks/core/pipeline/base/element_register.cpp",
    "$ace_root/frameworks/core/pipeline/base/render_node.cpp",
    "$ace_root/frameworks/core/pipeline/pipeline_base.cpp",
    "$ace_root/frameworks/core/pipeline/pipeline_context.cpp",
    "$ace_root/frameworks/core/pipeline_ng/pipeline_context.cpp",
    "$ace_root/frameworks/core/pipeline_ng/ui_task_scheduler.cpp",
    "$ace_root/test/mock/core/common/mock_container.cpp",
    "$ace_root/test/mock/core/common/mock_flutter_window.cpp",
    "$ace_root/test/mock/core/common/mock_window.cpp",
    "event_manager_test_ng.cpp",
  ]

  external_deps = [
    "eventhandler:libeventhandler",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
  ]

  deps = [
    "$ace_flutter_engine_root:flutter_engine_common_ohos",
    "$ace_flutter_engine_root/libtxt:thirdparty_lib_txt_ohos",
    "$ace_graphic/rosen/modules/2d_graphics:2d_graphics",
    "$ace_graphic/rosen/modules/render_service_client:librender_service_client",
    "$ace_root/frameworks/base:ace_memory_monitor_ohos",
    "$cjson_root:cjson",
    "$skia_root_new:skia_ohos",
    "//third_party/googletest:gmock_main",
  ]

  if (enable_graphic_text_gine) {
    deps -= [ "$ace_flutter_engine_root/libtxt:thirdparty_lib_txt_ohos" ]
  }

  configs = [
    "$ace_root/test/unittest:ace_unittest_config",
    "$ace_flutter_engine_root:flutter_config",
  ]
}
