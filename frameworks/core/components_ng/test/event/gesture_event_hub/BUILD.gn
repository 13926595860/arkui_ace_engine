# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/arkui/ace_engine/test/unittest/ace_unittest.gni")

ohos_unittest("gesture_event_hub_test_ng") {
  module_out_path = event_test_output_path

  sources = [
    # inner
    "$ace_root/frameworks/base/geometry/dimension.cpp",
    "$ace_root/frameworks/base/json/json_util.cpp",
    "$ace_root/frameworks/base/utils/time_util.cpp",
    "$ace_root/frameworks/core/components/common/properties/alignment.cpp",
    "$ace_root/frameworks/core/components/common/properties/color.cpp",
    "$ace_root/frameworks/core/components_ng/base/geometry_node.cpp",
    "$ace_root/frameworks/core/components_ng/event/event_hub.cpp",
    "$ace_root/frameworks/core/components_ng/event/focus_hub.cpp",
    "$ace_root/frameworks/core/components_ng/event/gesture_event_hub.cpp",
    "$ace_root/frameworks/core/components_ng/event/input_event.cpp",
    "$ace_root/frameworks/core/components_ng/event/input_event_hub.cpp",
    "$ace_root/frameworks/core/components_ng/event/state_style_manager.cpp",
    "$ace_root/frameworks/core/components_ng/gestures/long_press_gesture.cpp",
    "$ace_root/frameworks/core/components_ng/manager/drag_drop/drag_drop_manager.cpp",
    "$ace_root/frameworks/core/components_ng/manager/drag_drop/drag_drop_proxy.cpp",
    "$ace_root/frameworks/core/components_ng/property/calc_length.cpp",
    "$ace_root/frameworks/core/components_ng/property/measure_utils.cpp",
    "$ace_root/frameworks/core/components_ng/property/property.cpp",
    "$ace_root/frameworks/core/components_v2/inspector/inspector_constants.cpp",

    # public mock
    "$ace_root/frameworks/base/test/mock/mock_drag_window.cpp",
    "$ace_root/frameworks/base/test/mock/mock_pixel_map.cpp",
    "$ace_root/frameworks/core/common/test/mock/mock_clipboard.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/animation/mock_geometry_transition.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/base/mock_frame_node.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/base/mock_ui_node.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/gesture/recognizers/mock_click_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/gesture/recognizers/mock_exclusive_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/gesture/recognizers/mock_gesture_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/gesture/recognizers/mock_long_press_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/gesture/recognizers/mock_parallel_recognizer.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/gesture/recognizers/mock_recognizer_group.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/layout/mock_box_layout_algorithm.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/layout/mock_layout_property.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/render/mock_render_context.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/render/mock_render_context_creator.cpp",
    "$ace_root/frameworks/core/pipeline_ng/test/mock/mock_element_register.cpp",
    "$ace_root/frameworks/core/pipeline_ng/test/mock/mock_pipeline_base.cpp",
    "$ace_root/test/mock/core/common/mock_container.cpp",

    # self mock
    "$ace_root/frameworks/core/components_ng/test/event/mock/mock_click_event.cpp",
    "$ace_root/frameworks/core/components_ng/test/event/mock/mock_drag_event.cpp",
    "$ace_root/frameworks/core/components_ng/test/event/mock/mock_long_press_event.cpp",
    "$ace_root/frameworks/core/components_ng/test/event/mock/mock_pan_event.cpp",
    "$ace_root/frameworks/core/components_ng/test/event/mock/mock_scrollable_event.cpp",
    "$ace_root/frameworks/core/components_ng/test/event/mock/mock_touch_event.cpp",

    # self
    "gesture_event_hub_test_ng.cpp",
  ]

  deps = [
    "$ace_root/frameworks/base:ace_memory_monitor_ohos",
    "$ace_root/test/unittest:ace_unittest_log",
    "$ace_root/test/unittest:ace_unittest_trace",
    "$cjson_root:cjson",
    "//third_party/googletest:gmock_main",
  ]

  configs = [ "$ace_root/test/unittest:ace_unittest_config" ]
}
