# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/arkui/ace_engine/ace_config.gni")
import("//foundation/arkui/ace_engine/test/unittest/ace_unittest.gni")

ohos_unittest("tabs_pattern_test_ng") {
  module_out_path = "$test_output_path/tabs"
  platform = "ohos"
  sources = [ "tabs_pattern_test_ng.cpp" ]

  deps = [
    "$ace_root/build:ace_ohos_unittest_base",
    "$ace_root/frameworks/core/components_ng/base:ace_core_components_base_ng_ohos",
  ]

  if (enable_ng_build) {
    deps += [
      "$ace_flutter_engine_root_new:third_party_flutter_engine_dev_ohos",
      "$ace_flutter_engine_root_new/third_party/skia:ace_skia_dev_ohos",
    ]
  } else {
    deps += [
      "$ace_flutter_engine_root:third_party_flutter_engine_ohos",
      "$ace_flutter_engine_root/skia:ace_skia_ohos",
    ]
  }

  configs = [
    ":config_tabs_test",
    "$ace_root:ace_config",
  ]
  include_dirs = [
    "//foundation/graphic/graphic_2d/rosen/modules/2d_engine",
    "//foundation/graphic/graphic_2d/rosen/modules/2d_engine/rosen_text",
    "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics/include",
    "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics/src",
    "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics/src/drawing/engine_adapter",
    "//third_party/bounds_checking_function/include",
  ]

  if (platform == "ohos") {
    deps += [
      "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics:2d_graphics",
    ]
  } else {
    deps += [ "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics:2d_graphics_source_$platform" ]
  }
}

config("config_tabs_test") {
  visibility = [ ":*" ]
  include_dirs = [
    "//commonlibrary/c_utils/base:utils_config",
    "$ace_root",
    "$ace_root/frameworks",
  ]
}

group("tabs_pattern_unit_test") {
  testonly = true
  deps = [ ":tabs_pattern_test_ng" ]
}

ohos_unittest("tabs_model_test_ng") {
  module_out_path = "$test_output_path/tabs"

  sources = [
    # linear_layout
    "$ace_root/frameworks/core/components_ng/pattern/flex/flex_layout_algorithm.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/linear_layout/column_model_ng.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/linear_layout/linear_layout_utils.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/linear_layout/row_model_ng.cpp",

    # image
    "$ace_root/frameworks/core/components/theme/icon_theme.cpp",
    "$ace_root/frameworks/core/components/theme/theme_constants.cpp",
    "$ace_root/frameworks/core/components/theme/theme_utils.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/image/image_layout_algorithm.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/image/image_paint_method.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/image/image_pattern.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/image_provider/mock_image_loading_context.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/image_provider/mock_image_painter.cpp",

    # text
    "$ace_root/frameworks/core/components_ng/pattern/text/text_accessibility_property.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/text/text_content_modifier.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/text/text_layout_property.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/text/text_overlay_modifier.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/pattern/text/mock_text_layout_algorithm.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/pattern/text/mock_text_paint_method.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/pattern/text/mock_text_pattern.cpp",
    "$ace_root/frameworks/core/components_ng/test/pattern/text/mock/mock_text_layout_adapter.cpp",

    # divider
    "$ace_root/frameworks/core/components_ng/pattern/divider/divider_layout_algorithm.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/divider/divider_modifier.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/divider/divider_pattern.cpp",
    "$ace_root/frameworks/core/components_ng/render/divider_painter.cpp",

    # mock
    "$ace_root/frameworks/core/animation/test/mock/mock_animator.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/swiper/swiper_layout_algorithm.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/swiper/swiper_paint_method.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/swiper/swiper_paint_property.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/swiper/swiper_pattern.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/swiper_indicator/digit_indicator/digit_indicator_layout_algorithm.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/swiper_indicator/dot_indicator/dot_indicator_layout_algorithm.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/swiper_indicator/dot_indicator/dot_indicator_modifier.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/swiper_indicator/dot_indicator/dot_indicator_paint_method.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/swiper_indicator/indicator_common/swiper_indicator_pattern.cpp",
    "$ace_root/frameworks/core/components_ng/test/event/mock/mock_scrollable_event.cpp",
    "$ace_root/frameworks/core/components_ng/test/event/scrollable_event/mock_scrollable.cpp",

    # scroll
    "$ace_root/frameworks/core/components_ng/pattern/scroll/scroll_spring_effect.cpp",

    # inner
    "$ace_root/frameworks/base/geometry/least_square_impl.cpp",
    "$ace_root/frameworks/base/geometry/matrix3.cpp",
    "$ace_root/frameworks/base/geometry/matrix4.cpp",
    "$ace_root/frameworks/core/animation/anticipate_curve.cpp",
    "$ace_root/frameworks/core/animation/cubic_curve.cpp",
    "$ace_root/frameworks/core/animation/curves.cpp",
    "$ace_root/frameworks/core/animation/scheduler.cpp",
    "$ace_root/frameworks/core/animation/scroll_motion.cpp",
    "$ace_root/frameworks/core/animation/spring_model.cpp",
    "$ace_root/frameworks/core/animation/spring_motion.cpp",
    "$ace_root/frameworks/core/common/container.cpp",
    "$ace_root/frameworks/core/common/container_scope.cpp",
    "$ace_root/frameworks/core/gestures/velocity_tracker.cpp",
    "$ace_root/frameworks/core/image/image_source_info.cpp",

    # self
    "$ace_root/frameworks/core/components_ng/pattern/tabs/tab_bar_layout_algorithm.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/tabs/tab_bar_layout_property.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/tabs/tab_bar_modifier.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/tabs/tab_bar_paint_method.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/tabs/tab_bar_pattern.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/tabs/tab_content_model_ng.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/tabs/tab_content_node.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/tabs/tabs_layout_algorithm.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/tabs/tabs_model_ng.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/tabs/tabs_node.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/tabs/tabs_pattern.cpp",
    "tabs_model_test_ng.cpp",
  ]

  sources += test_pattern_sources
  deps = test_pattern_deps
  configs = test_configs
}
