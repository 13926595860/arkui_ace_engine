# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/arkui/ace_engine/ace_unittest.gni")

ohos_unittest("plugin_pattern_test_ng") {
  module_out_path = "$pattern_test_output_path/plugin"

  sources = [
    "$ace_root/frameworks/core/common/ace_engine.cpp",
    "$ace_root/frameworks/core/common/container.cpp",
    "$ace_root/frameworks/core/common/container_scope.cpp",
    "$ace_root/frameworks/core/common/plugin_manager.cpp",
    "$ace_root/frameworks/core/components/plugin/plugin_window.cpp",
    "$ace_root/frameworks/core/components/plugin/resource/plugin_manager_delegate.cpp",
    "$ace_root/frameworks/core/components/plugin/resource/plugin_manager_resource.cpp",

    #mock
    "$ace_root/frameworks/core/components_ng/test/pattern/plugin/mock/mock_plugin_component_manager.cpp",
    "$ace_root/frameworks/core/components_ng/test/pattern/plugin/mock/mock_plugin_frontend.cpp",
    "$ace_root/frameworks/core/components_ng/test/pattern/plugin/mock/mock_plugin_frontend_delegate.cpp",
    "$ace_root/frameworks/core/components_ng/test/pattern/plugin/mock/mock_plugin_sub_container.cpp",
    "$ace_root/frameworks/core/event/back_end_event_manager.cpp",

    #slef
    "$ace_root/frameworks/core/components_ng/pattern/plugin/plugin_model_ng.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/plugin/plugin_node.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/plugin/plugin_pattern.cpp",
    "plugin_pattern_test_ng.cpp",
  ]

  sources += test_pattern_sources
  deps = test_pattern_deps
  deps += [
    "$ability_runtime_inner_api_path/ability_manager:ability_manager",
    "$ability_runtime_services_path/abilitymgr:abilityms",
    "$ace_flutter_engine_root:third_party_flutter_engine_ohos",
    "$ace_root/interfaces/inner_api/ui_service_manager:ui_service_mgr",
    "//third_party/zlib:shared_libz",
  ]
  external_deps = [
    "ability_base:extractortool",
    "ability_base:want",
    "ability_runtime:app_manager",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
  ]
  configs = test_configs
  configs += [
    "$ace_root/../../graphic/graphic_2d/rosen/modules/render_service_base:export_config",
    "$ace_root/../../graphic/graphic_2d/rosen/modules/render_service_client:render_service_client_config",
    "$ace_flutter_engine_root/skia:skia_config",
  ]

  if (os_account_exists) {
    external_deps += [ "os_account:os_account_innerkits" ]
  }
}
