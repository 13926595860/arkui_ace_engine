# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/arkui/ace_engine/test/unittest/ace_unittest.gni")

ohos_unittest("textfield_pattern_test_ng") {
  module_out_path = "$pattern_test_output_path/textfield"

  sources = [
    "$ace_root/frameworks/core/animation/anticipate_curve.cpp",
    "$ace_root/frameworks/core/animation/cubic_curve.cpp",
    "$ace_root/frameworks/core/animation/curves.cpp",
    "$ace_root/frameworks/core/common/container_scope.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/text/text_styles.cpp",
    "$ace_root/frameworks/core/components_ng/render/image_painter.cpp",
    "$ace_root/frameworks/core/components_ng/test/event/mock/mock_long_press_event.cpp",
    "$ace_root/frameworks/core/components_ng/test/event/mock/mock_scrollable_event.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/image_provider/mock_image_loading_context.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/image_provider/mock_image_source_info.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/manager/select_overlay/mock_select_overlay_proxy.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/pattern/scroll/mock_scroll_bar.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/pattern/scroll/mock_scroll_bar_painter.cpp",
    "$ace_root/frameworks/core/components_ng/test/mock/pattern/scrollable/mock_scrollable_pattern.cpp",

    # self
    "$ace_root/frameworks/core/components_ng/pattern/text_field/on_text_changed_listener_impl.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/text_field/text_field_accessibility_property.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/text_field/text_field_content_modifier.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/text_field/text_field_controller.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/text_field/text_field_layout_algorithm.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/text_field/text_field_manager.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/text_field/text_field_model_ng.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/text_field/text_field_overlay_modifier.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/text_field/text_field_paint_method.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/text_field/text_field_paint_property.cpp",
    "$ace_root/frameworks/core/components_ng/pattern/text_field/text_field_pattern.cpp",
    "$ace_root/frameworks/core/components_ng/test/pattern/textfield/textfield_pattern_test_ng.cpp",
  ]

  sources += test_pattern_sources
  deps = test_pattern_deps
  deps += [ "//third_party/icu/icu4c:shared_icui18n" ]
  external_deps = [
    "c_utils:utils",
    "hiviewdfx_hilog_native:libhilog",
    "imf:inputmethod_client",
    "input:libmmi-client",
  ]
  configs = test_configs
}
