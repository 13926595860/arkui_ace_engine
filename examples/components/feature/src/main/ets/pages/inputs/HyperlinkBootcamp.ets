/*
 * Copyright (c) 2024 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { Drawer } from 'common/src/main/ets/components/Drawer';
import { ColorBlock, RadioBlock, useEnabled, IconBlock } from 'common';

@Component
export struct HyperlinkBootcamp {
  @Require @Prop title: ResourceStr;
  @State showParameters: boolean = false;
  @State enableColor: boolean = false;
  @State color: ResourceColor | undefined = undefined;
  @State enableAddress: boolean = false;
  @State address: string | Resource = '';
  @State enableContent: boolean = false;
  @State content: string | Resource = 'Go to the developer website';
  @State enableImage: boolean = true;
  @State image: ResourceStr = $r('app.media.startIcon');

  build() {
    NavDestination() {
      Drawer({
        title: this.title,
        showParameters: $showParameters,
        content: () => {
          this.Content()
        },
        parameters: () => {
          this.Parameters()
        }
      })
    }
    .backgroundColor('#f1f3f5')
    .hideTitleBar(true)
  }

  @Builder
  Content() {
    Column() {
      Row(){
        Hyperlink('') {
          Image(useEnabled(this.enableImage,this.image))
            .width(200)
            .height(100)
        }
      }

      Row(){
        Hyperlink(useEnabled(this.enableAddress, this.address), useEnabled(this.enableContent, this.content)) {

        }
          .color(useEnabled(this.enableColor,this.color))
      }.width('100%').height('100%').justifyContent(FlexAlign.Center)

    }
  }

  @Builder
  Parameters() {
    Scroll() {
      Column({ space: 8 }) {

        ColorBlock({
          title: 'color',
          isEnabled: this.enableColor,
          color: this.color
        })

        IconBlock({
          title: 'image',
          isEnabled: this.enableImage,
          icon: this.image,
        })

        RadioBlock({
          title: 'address',
          isEnabled: this.enableAddress,
          value: this.address,
          dataSource: [
            { label: 'null', value: ' ' },
            { label: 'Address Component Example', value: 'www.example.com' },
          ]
        })

        RadioBlock({
          title: 'content',
          isEnabled: this.enableContent,
          value: this.content,
          dataSource: [
            { label: 'null', value: ' ' },
            { label: 'Go to the developer website', value: 'Go to the developer website' },
          ]
        })

      }
    }
  }
}

@Preview
@Component
struct HyperlinkBootcampPreviewer {
  build() {
    HyperlinkBootcamp({
      title: 'Hyperlink'
    })
  }
}